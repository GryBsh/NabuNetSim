@inherits ReactiveComponentBase<IReactiveObject>
<Div Flex="Flex.JustifyContent.Between" Width="Width.Is100" Visibility="Visibility">
    <Div Class="hstack gap-3">
        <Icon IconSize=@IconSize.Large Name="@Icon" />
        <h6 class="center-vert-10">@Heading</h6>
    </Div>
    <Div Class="Hstack">
        <Div Class="center-vert-10" Visibility="@ButtonVisibility" data-bs-toggle="tooltip" title=@ButtonTitle>
            <button Type="button" 
                    Class="btn btn-primary" 
                    onclick=@(() => { OnButtonClick(); })>
                <Icon Name="@ButtonIconName" />
            </button>
        </Div>
    </Div>
</Div>

@code {
    [Parameter]
    public Object? Icon { get; set; }

    [Parameter]
    public string Heading { get; set; } = string.Empty;

    [Parameter]
    public bool ShowButton { get; set; } = false;

    Visibility ButtonVisibility => ShowButton && Visibility is Visibility.Visible ? Visibility.Visible : Visibility.Invisible;

    [Parameter]
    public Action OnButtonClick { get; set; } = () => { };

    [Parameter]
    public object ButtonIconName { get; set; } = IconName.Times;

    [Parameter]
    public string ButtonTitle { get; set; } = "Close";

    [Parameter]
    public Visibility Visibility { get; set; } = Visibility.Visible;

}
