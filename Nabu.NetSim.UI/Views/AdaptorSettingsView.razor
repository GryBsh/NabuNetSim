@inherits ReactiveInjectableComponentBase<AdaptorSettingsViewModel>
@using Nabu.NetSim.UI.Forms;

<PlaceHolderView Icon="@("fa-gear")" Visibility="@ViewModel!.SettingsPage" />
<Container Width="Width.Is100">
    <Row>
        <Column Visibility=@ViewModel.Home.IsVisible(VisiblePage.AdaptorSettings) 
                ColumnSize="ColumnSize.Is2">
            <Div Class="btn-group-vertical sticky-top sticky-padded-top" Style="width:min-content; margin: auto;">
                <Button class="btn btn-success" 
                        onclick="@(() => { ViewModel.ApplySettings(); })" 
                        data-bs-toggle="tooltip" 
                        title="Apply"
                        disabled=@{!ViewModel.SettingsModel?.Changed}>
                    <Icon Name="IconName.Check" />
                </Button>
                <Button class="btn btn-danger"
                        onclick="@(() => { ViewModel.RevertSettings(); })"
                        data-bs-toggle="tooltip"
                        title="Revert"
                        disabled=@{
                            !ViewModel.SettingsModel?.Changed
                        }>
                    <Icon Name="IconName.Times" />
                </Button>
                <Button class="btn btn-warning"
                        onclick="@(() => { ViewModel.SaveSettings(); })"
                        data-bs-toggle="tooltip"
                        title="Save"
                        disabled=@{
                            !ViewModel?.CanSave
                        }>
                    <Icon Name="IconName.Save" />
                </Button>
                <Button Type="ButtonType.Button"
                        Class="btn btn-primary"
                        onclick="@(() => {
                            ViewModel.SetFilesPath(ViewModel.Selected.StoragePath);
                        })"
                        data-bs-toggle="tooltip"
                        title="Browse Storage"
                        disabled=@{ViewModel.BrowseDisabled}>
                    <Icon Name="IconName.FolderOpen" />
                </Button>
                <EmulatorButtonView OnClick="@(() => {
                                        if (ViewModel.SettingsModel?.Changed is true)
                                            ViewModel.ApplySettings(); 
                                    })" 
                                    Adaptor="@ViewModel.Selected" 
                                    Changed=@(ViewModel.SettingsModel?.Changed ?? false)/>
            </Div>
        </Column>
        <Column ColumnSize=@(ViewModel.Home.IsVisible(VisiblePage.AdaptorSettings) is Visibility.Visible ? ColumnSize.Is10 : ColumnSize.IsFull)>
            <HeaderView Icon="@(ViewModel?.Selected is TCPAdaptorSettings ? IconName.Wifi : IconName.Plug)"
                        Heading="@((ViewModel!.Selected is SerialAdaptorSettings) ? "Serial Adaptor" : "TCP Adaptor")"
                        ShowButton=true
                        OnButtonClick="@(() => {
                            ViewModel?.SetSelected(new NullAdaptorSettings());
                            OnClose?.Invoke(ViewModel.Selected);
                        })"
                        Visibility="@(ViewModel?.Selected is not NullAdaptorSettings ? Visibility.Visible : Visibility.Invisible)" />
            <br />
            <ListGroup Flush>
                <SettingsForm Sections=@ViewModel.Sections
                              Sources=@ViewModel.Sources
                              Programs=@ViewModel.Programs
                              Selected=@ViewModel.Selected
                              SerialPorts=@ViewModel.AvailableSerialPorts 
                />
            </ListGroup>
        </Column>
    </Row>
</Container>




