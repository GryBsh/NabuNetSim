@inherits ReactiveInjectableComponentBase<AdaptorViewModel>

<ListGroup Flush>
    <Repeater TItem="AdaptorSettings" Items="AdaptorList">    
        @{
            var isConnection = context is TCPAdaptorSettings tcp && tcp.Connection;
        }
        <ListGroupItem @key=@context>
            <Div Flex="Flex.JustifyContent.Between" Width="Width.Is100">
                <Heading Size="@(isConnection ? HeadingSize.Is6 : HeadingSize.Is5)" Margin="Margin.Is1.FromBottom">
                    <button class="btn @(ViewModel?.AdaptorStatus(context) == "Running" ? "btn-success" : "btn-primary")" onclick="@(() => { ViewModel?.Menu.SetSelected(context); })" data-bs-toggle="tooltip" title="Adaptor Settings">
                        @if (context is TCPAdaptorSettings)
                        {
                            <Icon IconSize=@IconSize.Large Name="IconName.Wifi" Style="min-width: 25px" />
                        }
                        else
                        {
                            <Icon IconSize=@IconSize.Large Name="IconName.Plug" Style="min-width: 25px" />
                        }
                    </button>
                    @context.Port
                </Heading>
                <Div Class="hstack">
                    <EmulatorButtonView Adaptor="@context" />
                    <Button Type=@ButtonType.Button Visibility=@(ViewModel?.AdaptorStatus(context) != "Running" ? Visibility.Visible : Visibility.Invisible) class="btn btn-success" onclick="@(() => ViewModel?.ToggleAdaptor(context))" data-bs-toggle="tooltip" title="Start Adaptor">
                        <Icon Name="IconName.Play"  />
                    </Button>
                    <Button Type=@ButtonType.Button Visibility="@(ViewModel?.AdaptorStatus(context) == "Running" ? Visibility.Visible : Visibility.Invisible)" class="btn btn-danger" onclick="@(() => ViewModel?.ToggleAdaptor(context))" data-bs-toggle="tooltip" title="Stop Adaptor">
                        <Icon Name="IconName.Stop"  />
                    </Button>
                </Div>
            </Div>
            <Paragraph Class="top-padding" Margin="Margin.Is1.FromBottom">
                <Icon IconSize="@IconSize.Large" Name="IconName.Folder" />
                @context.Source@(!string.IsNullOrWhiteSpace(context.Program) ? $"/{context.Program}" : string.Empty)
            </Paragraph>
        </ListGroupItem>
    </Repeater>
</ListGroup>
