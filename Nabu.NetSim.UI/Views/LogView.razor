@inherits ReactiveInjectableComponentBase<LogViewModel>

<HeaderView Icon="@IconName.BookReader"
            Heading="Log"/>

<ListGroup Flush Class="sticky-top sticky-padded-top">
    <ListGroupItem>
        <Div Flex="Flex.JustifyContent.Between">
            <Div Class="hstack gap-3" Style="width: 30%">
                <Div Class="input-group">
                    <Button Class="btn btn-primary" Disabled=ViewModel!.IsActivePage(1) @onclick="@ViewModel.PageBack">
                        <Icon Name="IconName.ArrowLeft" />
                    </Button>
                    <Select TValue="int" @bind-SelectedValue="@ViewModel.Page">
                        <Repeater TItem="int" Items="@(Enumerable.Range(1, ViewModel.PageCount))">
                            <SelectItem @key=context Value="context">@(context)</SelectItem>
                        </Repeater>
                    </Select>
                    <Select TValue="int" @bind-SelectedValue="@ViewModel.PageSize">
                        <SelectItem Value="100">100</SelectItem>
                        <SelectItem Value="200">200</SelectItem>
                        <SelectItem Value="500">500</SelectItem>
                        <SelectItem Value="1000">1000</SelectItem>
                    </Select>
                    <Button Class="btn btn-primary" Disabled=ViewModel.IsActivePage(ViewModel.PageCount) @onclick="@ViewModel.PageForward">
                        <Icon Name="IconName.ArrowRight" />
                    </Button>
                </Div>
            </Div>
            <Div>
                <Div Class="input-group">
                    <TextEdit @bind-Text="@ViewModel.Search" Placeholder="Search..." />
                    <Button Disabled=@(ViewModel.Search == string.Empty) Class="btn-primary" @onclick=@ViewModel.ClearSearch>
                        <Icon IconSize=@IconSize.Large Name="IconName.Clear" />
                    </Button>
                </Div>
            </Div>
        </Div>
        
    </ListGroupItem>
</ListGroup>
<ListGroup Flush>
    <Virtualize TItem="IGrouping<LogKey, LogEntry>" Items="ViewModel.CurrentPage" OverscanCount="50">
        <ListGroupItem>
            <Div Flex="Flex.JustifyContent.Between" Border=@(Border.OnBottom.White) TextAlignment=@TextAlignment.Start Width="Width.Is100">
                <Small Width="Width.Is50">
                    <Highlighter Text="@context.Key.Name" HighlightedText="@ViewModel.Search" />
                </Small>
            </Div>
            <Repeater TItem="LogEntry" Items="@context" Context="entry">
                
                <Div Width="Width.Is100" TextOverflow="TextOverflow.Wrap" Flex="Flex.JustifyContent.Between">
                    <Div><Small><Highlighter Text="@entry.Timestamp.ToString()" HighlightedText="@ViewModel.Search" /></Small></Div>
                    <Div><Small><Highlighter Text="@entry.LogLevel" HighlightedText="@ViewModel.Search" /></Small></Div>
                    <Div Style="width: 65%; word-break:break-all"><Small><Highlighter Text="@entry.Message" HighlightedText="@ViewModel.Search" /></Small></Div>
                </Div>
            </Repeater>
        </ListGroupItem>
    </Virtualize>
    
</ListGroup>





        
